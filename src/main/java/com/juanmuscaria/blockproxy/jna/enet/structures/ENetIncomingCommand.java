package com.juanmuscaria.blockproxy.jna.enet.structures;

import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import com.sun.jna.ptr.IntByReference;

import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : enet/enet.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class ENetIncomingCommand extends Structure {
	/** C type : ENetListNode */
	public ENetListNode incomingCommandList;
	/** C type : enet_uint16 */
	public short reliableSequenceNumber;
	/** C type : enet_uint16 */
	public short unreliableSequenceNumber;
	/** C type : ENetProtocol */
	public ENetProtocol command;
	/** C type : enet_uint32 */
	public int fragmentCount;
	/** C type : enet_uint32 */
	public int fragmentsRemaining;
	/** C type : enet_uint32* */
	public IntByReference fragments;
	/** C type : ENetPacket* */
	public ENetPacket.ByReference packet;
	public ENetIncomingCommand() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("incomingCommandList", "reliableSequenceNumber", "unreliableSequenceNumber", "command", "fragmentCount", "fragmentsRemaining", "fragments", "packet");
	}
	/**
	 * @param incomingCommandList C type : ENetListNode<br>
	 * @param reliableSequenceNumber C type : enet_uint16<br>
	 * @param unreliableSequenceNumber C type : enet_uint16<br>
	 * @param command C type : ENetProtocol<br>
	 * @param fragmentCount C type : enet_uint32<br>
	 * @param fragmentsRemaining C type : enet_uint32<br>
	 * @param fragments C type : enet_uint32*<br>
	 * @param packet C type : ENetPacket*
	 */
	public ENetIncomingCommand(ENetListNode incomingCommandList, short reliableSequenceNumber, short unreliableSequenceNumber, ENetProtocol command, int fragmentCount, int fragmentsRemaining, IntByReference fragments, ENetPacket.ByReference packet) {
		super();
		this.incomingCommandList = incomingCommandList;
		this.reliableSequenceNumber = reliableSequenceNumber;
		this.unreliableSequenceNumber = unreliableSequenceNumber;
		this.command = command;
		this.fragmentCount = fragmentCount;
		this.fragmentsRemaining = fragmentsRemaining;
		this.fragments = fragments;
		this.packet = packet;
	}
	public ENetIncomingCommand(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends ENetIncomingCommand implements Structure.ByReference {
		
	}

	public static class ByValue extends ENetIncomingCommand implements Structure.ByValue {
		
	}
}
