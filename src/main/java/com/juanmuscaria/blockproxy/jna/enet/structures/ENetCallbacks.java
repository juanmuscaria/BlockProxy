package com.juanmuscaria.blockproxy.jna.enet.structures;
import com.juanmuscaria.blockproxy.jna.types.Size_t;
import com.sun.jna.Callback;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;

import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : ./enet/callbacks.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class ENetCallbacks extends Structure {
	/** C type : malloc_callback* */
	public malloc_callback malloc;
	/** C type : free_callback* */
	public free_callback free;
	/** C type : no_memory_callback* */
	public no_memory_callback no_memory;
	/** <i>native declaration : ./enet/callbacks.h</i> */
	public interface malloc_callback extends Callback {
		Pointer apply(Size_t size);
	}

	/** <i>native declaration : ./enet/callbacks.h</i> */
	public interface free_callback extends Callback {
		void apply(Pointer memory);
	}

	/** <i>native declaration : ./enet/callbacks.h</i> */
	public interface no_memory_callback extends Callback {
		void apply();
	}

	public ENetCallbacks() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("malloc", "free", "no_memory");
	}
	/**
	 * @param malloc C type : malloc_callback*<br>
	 * @param free C type : free_callback*<br>
	 * @param no_memory C type : no_memory_callback*
	 */
	public ENetCallbacks(malloc_callback malloc, free_callback free, no_memory_callback no_memory) {
		super();
		this.malloc = malloc;
		this.free = free;
		this.no_memory = no_memory;
	}
	public ENetCallbacks(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends ENetCallbacks implements Structure.ByReference {
		
	}

	public static class ByValue extends ENetCallbacks implements Structure.ByValue {
		
	}
}
