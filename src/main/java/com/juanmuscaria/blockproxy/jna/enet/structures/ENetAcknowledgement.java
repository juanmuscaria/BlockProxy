package com.juanmuscaria.blockproxy.jna.enet.structures;

import com.sun.jna.Pointer;
import com.sun.jna.Structure;

import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : enet/enet.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class ENetAcknowledgement extends Structure {
	/** C type : ENetListNode */
	public ENetListNode acknowledgementList;
	/** C type : enet_uint32 */
	public int sentTime;
	/** C type : ENetProtocol */
	public ENetProtocol command;
	public ENetAcknowledgement() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("acknowledgementList", "sentTime", "command");
	}
	/**
	 * @param acknowledgementList C type : ENetListNode<br>
	 * @param sentTime C type : enet_uint32<br>
	 * @param command C type : ENetProtocol
	 */
	public ENetAcknowledgement(ENetListNode acknowledgementList, int sentTime, ENetProtocol command) {
		super();
		this.acknowledgementList = acknowledgementList;
		this.sentTime = sentTime;
		this.command = command;
	}
	public ENetAcknowledgement(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends ENetAcknowledgement implements Structure.ByReference {
		
	}

    public static class ByValue extends ENetAcknowledgement implements Structure.ByValue {
		
	}
}
